
//variable

/*variable name*/ (equal) 100

//calc

/*variable name*/ (equal) 100 (plus) 200 (minus) 300

/*************************/



//Run a function

(/*function name*/) (pare) 0 (dot) 1 (dot) 2 (dot) (pare_end)

(/*function mame*/)(pare)(pare_end)


/*************************/



//Definition a function

(function) main (pare) (pare_end)

	/*Here the your code.*/

(command_end)


/************************/



//if

(if) (pare) 1 (equal) 1 (pare_end)

	/* Here the your code. */

(command_end)

/*************************/


//loop

(loop)(pare)1(pare_end)

	/* Here the your code. */

(command_end)




/********************************************/


プログラミング言語の基本的な作り方(独自)

・lexerを作る

コマンドや文字列を区切ってプログラムで処理しやすい形にする

例:
input.(str)
abc=1+2+3*4

output.(list)
["abc","=","1","+","2","+","3","*","4"]


・parser

プログラムを層に分けて、より処理しやすくするパーサー結構大事

例:
input.(list)
["abc","=","1","+","2","+","3","*","4"]

output.(json)
[
    {
        "left": "abc",
        "op": "=",
        "right": {
            "left": {
                "left": "1",
                "op": "+",
                "right": "2"
            },
            "op": "+",
            "right": {
                "left": "3",
                "op": "*",
                "right": "4"
            }
        }
    }
]

例2:
input.
["a", "=", "1", "+", "2"]

output.
[
    {
        "left": "a",
        "op": "(equal)",
        "right": {
            "left": "1",
            "op": "(plus)",
            "right": "2"
        }
    }
]

例3(複雑なので例を増やした):
input.
["a", "=", "1"]

output.
[
    {
        "left": "a",
        "op": "=",
        "right": "1"
    }
]

・コマンド実行処理(メイン):

コマンドを実行するだけ

例:
input.
(str)
command : "print('hello');"
(list)
lexer : ["print","(","'hello'",")",";"]
(json)
parser:
[
    {
        "left": "print",
        "op": {
            "left": "(",
            "op": "'hello'",
            "right": ")"
        },
        "right": ";"
    }
]


output.

---------console--------------
hello